[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tmux-capture"
version = "0.1.1"
description = "Interactive tmux pane text capture and selection tool with vim-friendly hints"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
dependencies = [
    "blessed>=1.21.0",
]

[project.scripts]
tmux-capture = "tmux-capture:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--import-mode=importlib",
    "-v",
    "--tb=short",
    "--cov=tmux_capture",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]

[tool.coverage.run]
source = ["tmux-capture"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
target-version = "py310"
line-length = 88
extend-exclude = ["tests/**/*"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["tmux_capture"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["E501", "F401"]

[tool.hatch.build.targets.wheel]
packages = ["tmux_capture"]
exclude = [
    "tests/",
    "*.log",
    "debug/",
    ".env*",
    "uv.lock",
    "*.yaml"
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
]
